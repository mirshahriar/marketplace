{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "API Documentation for Marketplace",
        "title": "Marketplace",
        "contact": {
            "name": "API Support"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/products": {
            "get": {
                "description": "Lists all products",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Lists all products",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page size",
                        "name": "size",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "sort_by",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Order by",
                        "name": "sort_direction",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.Page-types_ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a product with valid data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Creates a product",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    },
                    {
                        "description": "Request body of Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ProductBody"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        },
        "/products/{product}": {
            "get": {
                "description": "Gets a product by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Gets a product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/types.ProductResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            },
            "put": {
                "description": "Updates a product by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Updates a product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Request body of Product",
                        "name": "product",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/types.ProductBody"
                        }
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            },
            "delete": {
                "description": "Deletes a product by ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "product"
                ],
                "summary": "Deletes a product by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Product ID",
                        "name": "product",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Authorization",
                        "name": "Authorization",
                        "in": "header",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "403": {
                        "description": "Forbidden",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/errors.CustomError"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "errors.CustomError": {
            "type": "object",
            "properties": {
                "details": {
                    "description": "Details is the error details for debugging"
                },
                "message": {
                    "description": "Message is the error message to display",
                    "type": "string"
                }
            }
        },
        "types.Page-types_ProductResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "Data holds the original response list",
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "createdAt": {
                                "description": "CreatedAt is the time when the product was created",
                                "type": "string"
                            },
                            "description": {
                                "description": "Description is the description of the product. Max length is 200.\n+required",
                                "type": "string"
                            },
                            "id": {
                                "description": "ID represents the product id",
                                "type": "integer"
                            },
                            "name": {
                                "description": "Name is the name of the product. Max length is 100.\n+required",
                                "type": "string"
                            },
                            "price": {
                                "description": "Price is the price of the product. Must be positive number.\n+required",
                                "type": "number"
                            },
                            "updatedAt": {
                                "description": "UpdatedAt is the time when the product was updated",
                                "type": "string"
                            }
                        }
                    }
                },
                "page": {
                    "description": "Page represents the current page",
                    "type": "integer"
                },
                "size": {
                    "description": "Size represents the number of items in a page",
                    "type": "integer"
                },
                "total": {
                    "description": "Total represents the total number of items in the DB",
                    "type": "integer"
                }
            }
        },
        "types.ProductBody": {
            "type": "object",
            "properties": {
                "description": {
                    "description": "Description is the description of the product. Max length is 200.\n+required",
                    "type": "string"
                },
                "name": {
                    "description": "Name is the name of the product. Max length is 100.\n+required",
                    "type": "string"
                },
                "price": {
                    "description": "Price is the price of the product. Must be positive number.\n+required",
                    "type": "number"
                }
            }
        },
        "types.ProductResponse": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "description": "CreatedAt is the time when the product was created",
                    "type": "string"
                },
                "description": {
                    "description": "Description is the description of the product. Max length is 200.\n+required",
                    "type": "string"
                },
                "id": {
                    "description": "ID represents the product id",
                    "type": "integer"
                },
                "name": {
                    "description": "Name is the name of the product. Max length is 100.\n+required",
                    "type": "string"
                },
                "price": {
                    "description": "Price is the price of the product. Must be positive number.\n+required",
                    "type": "number"
                },
                "updatedAt": {
                    "description": "UpdatedAt is the time when the product was updated",
                    "type": "string"
                }
            }
        }
    }
}